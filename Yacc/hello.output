Terminals unused in grammar

   ERR
   DO
   BEGIN2
   END2


Grammar

    0 $accept: program $end

    1 program: INT MAIN LP RP LC stmt_list RC DOLL

    2 stmt_list: stmt_list stmt
    3          | stmt

    4 stmt: assignment SEMI
    5     | ifstmt
    6     | WHILE LP expr RP LC stmt_list RC
    7     | declaration SEMI
    8     | FOR LP forcondition1 SEMI forcond2 SEMI forcondition1 RP LC stmt_list RC
    9     | SWITCH LP expr RP LC casestmt RC

   10 casestmt: CASE expr COLON stmt_list BREAK SEMI casestmt
   11         | TDEFAULT COLON stmt_list
   12         | /* empty */

   13 forcondition1: assignment
   14              | /* empty */

   15 forcond2: expr
   16         | /* empty */

   17 assignment: ID EQ expr

   18 declaration: INT ID initialisation
   19            | FLOAT ID initialisation
   20            | CHAR ID initialisation
   21            | DOUBLE ID initialisation
   22            | LONG ID initialisation
   23            | SHORT ID initialisation

   24 initialisation: EQ factor
   25               | /* empty */

   26 ifstmt: IF LP expr RP LC stmt_list RC elsestmt

   27 elsestmt: ELSE LC stmt_list RC
   28         | ELSE ifstmt
   29         | /* empty */

   30 expr: expr LT expr2
   31     | expr GT expr2
   32     | expr LE expr2
   33     | expr GE expr2
   34     | expr EQQ expr2
   35     | expr2

   36 expr2: expr2 PLUS term
   37      | expr2 MINUS term
   38      | term

   39 term: term TIMES factor
   40     | term DIV factor
   41     | factor

   42 factor: LP expr RP
   43       | NUM
   44       | ID


Terminals, with rules where they appear

$end (0) 0
error (256)
IF (258) 26
ELSE (259) 27 28
ERR (260)
LP (261) 1 6 8 9 26 42
RP (262) 1 6 8 9 26 42
NUM (263) 43
DOLL (264) 1
ID (265) 17 18 19 20 21 22 23 44
SEMI (266) 4 7 8 10
WHILE (267) 6
DO (268)
FOR (269) 8
BREAK (270) 10
BEGIN2 (271)
END2 (272)
INT (273) 1 18
MAIN (274) 1
LC (275) 1 6 8 9 26 27
RC (276) 1 6 8 9 26 27
DOUBLE (277) 21
LONG (278) 22
SHORT (279) 23
FLOAT (280) 19
CHAR (281) 20
SWITCH (282) 9
CASE (283) 10
TDEFAULT (284) 11
COLON (285) 10 11
EQ (286) 17 24
EQQ (287) 34
GE (288) 33
GT (289) 31
LE (290) 32
LT (291) 30
MINUS (292) 37
PLUS (293) 36
DIV (294) 40
TIMES (295) 39


Nonterminals, with rules where they appear

$accept (41)
    on left: 0
program (42)
    on left: 1, on right: 0
stmt_list (43)
    on left: 2 3, on right: 1 2 6 8 10 11 26 27
stmt (44)
    on left: 4 5 6 7 8 9, on right: 2 3
casestmt (45)
    on left: 10 11 12, on right: 9 10
forcondition1 (46)
    on left: 13 14, on right: 8
forcond2 (47)
    on left: 15 16, on right: 8
assignment (48)
    on left: 17, on right: 4 13
declaration (49)
    on left: 18 19 20 21 22 23, on right: 7
initialisation (50)
    on left: 24 25, on right: 18 19 20 21 22 23
ifstmt (51)
    on left: 26, on right: 5 28
elsestmt (52)
    on left: 27 28 29, on right: 26
expr (53)
    on left: 30 31 32 33 34 35, on right: 6 9 10 15 17 26 30 31 32
    33 34 42
expr2 (54)
    on left: 36 37 38, on right: 30 31 32 33 34 35 36 37
term (55)
    on left: 39 40 41, on right: 36 37 38 39 40
factor (56)
    on left: 42 43 44, on right: 24 39 40 41


State 0

    0 $accept: . program $end

    INT  shift, and go to state 1

    program  go to state 2


State 1

    1 program: INT . MAIN LP RP LC stmt_list RC DOLL

    MAIN  shift, and go to state 3


State 2

    0 $accept: program . $end

    $end  shift, and go to state 4


State 3

    1 program: INT MAIN . LP RP LC stmt_list RC DOLL

    LP  shift, and go to state 5


State 4

    0 $accept: program $end .

    $default  accept


State 5

    1 program: INT MAIN LP . RP LC stmt_list RC DOLL

    RP  shift, and go to state 6


State 6

    1 program: INT MAIN LP RP . LC stmt_list RC DOLL

    LC  shift, and go to state 7


State 7

    1 program: INT MAIN LP RP LC . stmt_list RC DOLL

    IF      shift, and go to state 8
    ID      shift, and go to state 9
    WHILE   shift, and go to state 10
    FOR     shift, and go to state 11
    INT     shift, and go to state 12
    DOUBLE  shift, and go to state 13
    LONG    shift, and go to state 14
    SHORT   shift, and go to state 15
    FLOAT   shift, and go to state 16
    CHAR    shift, and go to state 17
    SWITCH  shift, and go to state 18

    stmt_list    go to state 19
    stmt         go to state 20
    assignment   go to state 21
    declaration  go to state 22
    ifstmt       go to state 23


State 8

   26 ifstmt: IF . LP expr RP LC stmt_list RC elsestmt

    LP  shift, and go to state 24


State 9

   17 assignment: ID . EQ expr

    EQ  shift, and go to state 25


State 10

    6 stmt: WHILE . LP expr RP LC stmt_list RC

    LP  shift, and go to state 26


State 11

    8 stmt: FOR . LP forcondition1 SEMI forcond2 SEMI forcondition1 RP LC stmt_list RC

    LP  shift, and go to state 27


State 12

   18 declaration: INT . ID initialisation

    ID  shift, and go to state 28


State 13

   21 declaration: DOUBLE . ID initialisation

    ID  shift, and go to state 29


State 14

   22 declaration: LONG . ID initialisation

    ID  shift, and go to state 30


State 15

   23 declaration: SHORT . ID initialisation

    ID  shift, and go to state 31


State 16

   19 declaration: FLOAT . ID initialisation

    ID  shift, and go to state 32


State 17

   20 declaration: CHAR . ID initialisation

    ID  shift, and go to state 33


State 18

    9 stmt: SWITCH . LP expr RP LC casestmt RC

    LP  shift, and go to state 34


State 19

    1 program: INT MAIN LP RP LC stmt_list . RC DOLL
    2 stmt_list: stmt_list . stmt

    IF      shift, and go to state 8
    ID      shift, and go to state 9
    WHILE   shift, and go to state 10
    FOR     shift, and go to state 11
    INT     shift, and go to state 12
    RC      shift, and go to state 35
    DOUBLE  shift, and go to state 13
    LONG    shift, and go to state 14
    SHORT   shift, and go to state 15
    FLOAT   shift, and go to state 16
    CHAR    shift, and go to state 17
    SWITCH  shift, and go to state 18

    stmt         go to state 36
    assignment   go to state 21
    declaration  go to state 22
    ifstmt       go to state 23


State 20

    3 stmt_list: stmt .

    $default  reduce using rule 3 (stmt_list)


State 21

    4 stmt: assignment . SEMI

    SEMI  shift, and go to state 37


State 22

    7 stmt: declaration . SEMI

    SEMI  shift, and go to state 38


State 23

    5 stmt: ifstmt .

    $default  reduce using rule 5 (stmt)


State 24

   26 ifstmt: IF LP . expr RP LC stmt_list RC elsestmt

    LP   shift, and go to state 39
    NUM  shift, and go to state 40
    ID   shift, and go to state 41

    expr    go to state 42
    expr2   go to state 43
    term    go to state 44
    factor  go to state 45


State 25

   17 assignment: ID EQ . expr

    LP   shift, and go to state 39
    NUM  shift, and go to state 40
    ID   shift, and go to state 41

    expr    go to state 46
    expr2   go to state 43
    term    go to state 44
    factor  go to state 45


State 26

    6 stmt: WHILE LP . expr RP LC stmt_list RC

    LP   shift, and go to state 39
    NUM  shift, and go to state 40
    ID   shift, and go to state 41

    expr    go to state 47
    expr2   go to state 43
    term    go to state 44
    factor  go to state 45


State 27

    8 stmt: FOR LP . forcondition1 SEMI forcond2 SEMI forcondition1 RP LC stmt_list RC

    ID  shift, and go to state 9

    $default  reduce using rule 14 (forcondition1)

    forcondition1  go to state 48
    assignment     go to state 49


State 28

   18 declaration: INT ID . initialisation

    EQ  shift, and go to state 50

    $default  reduce using rule 25 (initialisation)

    initialisation  go to state 51


State 29

   21 declaration: DOUBLE ID . initialisation

    EQ  shift, and go to state 50

    $default  reduce using rule 25 (initialisation)

    initialisation  go to state 52


State 30

   22 declaration: LONG ID . initialisation

    EQ  shift, and go to state 50

    $default  reduce using rule 25 (initialisation)

    initialisation  go to state 53


State 31

   23 declaration: SHORT ID . initialisation

    EQ  shift, and go to state 50

    $default  reduce using rule 25 (initialisation)

    initialisation  go to state 54


State 32

   19 declaration: FLOAT ID . initialisation

    EQ  shift, and go to state 50

    $default  reduce using rule 25 (initialisation)

    initialisation  go to state 55


State 33

   20 declaration: CHAR ID . initialisation

    EQ  shift, and go to state 50

    $default  reduce using rule 25 (initialisation)

    initialisation  go to state 56


State 34

    9 stmt: SWITCH LP . expr RP LC casestmt RC

    LP   shift, and go to state 39
    NUM  shift, and go to state 40
    ID   shift, and go to state 41

    expr    go to state 57
    expr2   go to state 43
    term    go to state 44
    factor  go to state 45


State 35

    1 program: INT MAIN LP RP LC stmt_list RC . DOLL

    DOLL  shift, and go to state 58


State 36

    2 stmt_list: stmt_list stmt .

    $default  reduce using rule 2 (stmt_list)


State 37

    4 stmt: assignment SEMI .

    $default  reduce using rule 4 (stmt)


State 38

    7 stmt: declaration SEMI .

    $default  reduce using rule 7 (stmt)


State 39

   42 factor: LP . expr RP

    LP   shift, and go to state 39
    NUM  shift, and go to state 40
    ID   shift, and go to state 41

    expr    go to state 59
    expr2   go to state 43
    term    go to state 44
    factor  go to state 45


State 40

   43 factor: NUM .

    $default  reduce using rule 43 (factor)


State 41

   44 factor: ID .

    $default  reduce using rule 44 (factor)


State 42

   26 ifstmt: IF LP expr . RP LC stmt_list RC elsestmt
   30 expr: expr . LT expr2
   31     | expr . GT expr2
   32     | expr . LE expr2
   33     | expr . GE expr2
   34     | expr . EQQ expr2

    RP   shift, and go to state 60
    EQQ  shift, and go to state 61
    GE   shift, and go to state 62
    GT   shift, and go to state 63
    LE   shift, and go to state 64
    LT   shift, and go to state 65


State 43

   35 expr: expr2 .
   36 expr2: expr2 . PLUS term
   37      | expr2 . MINUS term

    MINUS  shift, and go to state 66
    PLUS   shift, and go to state 67

    $default  reduce using rule 35 (expr)


State 44

   38 expr2: term .
   39 term: term . TIMES factor
   40     | term . DIV factor

    DIV    shift, and go to state 68
    TIMES  shift, and go to state 69

    $default  reduce using rule 38 (expr2)


State 45

   41 term: factor .

    $default  reduce using rule 41 (term)


State 46

   17 assignment: ID EQ expr .
   30 expr: expr . LT expr2
   31     | expr . GT expr2
   32     | expr . LE expr2
   33     | expr . GE expr2
   34     | expr . EQQ expr2

    EQQ  shift, and go to state 61
    GE   shift, and go to state 62
    GT   shift, and go to state 63
    LE   shift, and go to state 64
    LT   shift, and go to state 65

    $default  reduce using rule 17 (assignment)


State 47

    6 stmt: WHILE LP expr . RP LC stmt_list RC
   30 expr: expr . LT expr2
   31     | expr . GT expr2
   32     | expr . LE expr2
   33     | expr . GE expr2
   34     | expr . EQQ expr2

    RP   shift, and go to state 70
    EQQ  shift, and go to state 61
    GE   shift, and go to state 62
    GT   shift, and go to state 63
    LE   shift, and go to state 64
    LT   shift, and go to state 65


State 48

    8 stmt: FOR LP forcondition1 . SEMI forcond2 SEMI forcondition1 RP LC stmt_list RC

    SEMI  shift, and go to state 71


State 49

   13 forcondition1: assignment .

    $default  reduce using rule 13 (forcondition1)


State 50

   24 initialisation: EQ . factor

    LP   shift, and go to state 39
    NUM  shift, and go to state 40
    ID   shift, and go to state 41

    factor  go to state 72


State 51

   18 declaration: INT ID initialisation .

    $default  reduce using rule 18 (declaration)


State 52

   21 declaration: DOUBLE ID initialisation .

    $default  reduce using rule 21 (declaration)


State 53

   22 declaration: LONG ID initialisation .

    $default  reduce using rule 22 (declaration)


State 54

   23 declaration: SHORT ID initialisation .

    $default  reduce using rule 23 (declaration)


State 55

   19 declaration: FLOAT ID initialisation .

    $default  reduce using rule 19 (declaration)


State 56

   20 declaration: CHAR ID initialisation .

    $default  reduce using rule 20 (declaration)


State 57

    9 stmt: SWITCH LP expr . RP LC casestmt RC
   30 expr: expr . LT expr2
   31     | expr . GT expr2
   32     | expr . LE expr2
   33     | expr . GE expr2
   34     | expr . EQQ expr2

    RP   shift, and go to state 73
    EQQ  shift, and go to state 61
    GE   shift, and go to state 62
    GT   shift, and go to state 63
    LE   shift, and go to state 64
    LT   shift, and go to state 65


State 58

    1 program: INT MAIN LP RP LC stmt_list RC DOLL .

    $default  reduce using rule 1 (program)


State 59

   30 expr: expr . LT expr2
   31     | expr . GT expr2
   32     | expr . LE expr2
   33     | expr . GE expr2
   34     | expr . EQQ expr2
   42 factor: LP expr . RP

    RP   shift, and go to state 74
    EQQ  shift, and go to state 61
    GE   shift, and go to state 62
    GT   shift, and go to state 63
    LE   shift, and go to state 64
    LT   shift, and go to state 65


State 60

   26 ifstmt: IF LP expr RP . LC stmt_list RC elsestmt

    LC  shift, and go to state 75


State 61

   34 expr: expr EQQ . expr2

    LP   shift, and go to state 39
    NUM  shift, and go to state 40
    ID   shift, and go to state 41

    expr2   go to state 76
    term    go to state 44
    factor  go to state 45


State 62

   33 expr: expr GE . expr2

    LP   shift, and go to state 39
    NUM  shift, and go to state 40
    ID   shift, and go to state 41

    expr2   go to state 77
    term    go to state 44
    factor  go to state 45


State 63

   31 expr: expr GT . expr2

    LP   shift, and go to state 39
    NUM  shift, and go to state 40
    ID   shift, and go to state 41

    expr2   go to state 78
    term    go to state 44
    factor  go to state 45


State 64

   32 expr: expr LE . expr2

    LP   shift, and go to state 39
    NUM  shift, and go to state 40
    ID   shift, and go to state 41

    expr2   go to state 79
    term    go to state 44
    factor  go to state 45


State 65

   30 expr: expr LT . expr2

    LP   shift, and go to state 39
    NUM  shift, and go to state 40
    ID   shift, and go to state 41

    expr2   go to state 80
    term    go to state 44
    factor  go to state 45


State 66

   37 expr2: expr2 MINUS . term

    LP   shift, and go to state 39
    NUM  shift, and go to state 40
    ID   shift, and go to state 41

    term    go to state 81
    factor  go to state 45


State 67

   36 expr2: expr2 PLUS . term

    LP   shift, and go to state 39
    NUM  shift, and go to state 40
    ID   shift, and go to state 41

    term    go to state 82
    factor  go to state 45


State 68

   40 term: term DIV . factor

    LP   shift, and go to state 39
    NUM  shift, and go to state 40
    ID   shift, and go to state 41

    factor  go to state 83


State 69

   39 term: term TIMES . factor

    LP   shift, and go to state 39
    NUM  shift, and go to state 40
    ID   shift, and go to state 41

    factor  go to state 84


State 70

    6 stmt: WHILE LP expr RP . LC stmt_list RC

    LC  shift, and go to state 85


State 71

    8 stmt: FOR LP forcondition1 SEMI . forcond2 SEMI forcondition1 RP LC stmt_list RC

    LP   shift, and go to state 39
    NUM  shift, and go to state 40
    ID   shift, and go to state 41

    $default  reduce using rule 16 (forcond2)

    forcond2  go to state 86
    expr      go to state 87
    expr2     go to state 43
    term      go to state 44
    factor    go to state 45


State 72

   24 initialisation: EQ factor .

    $default  reduce using rule 24 (initialisation)


State 73

    9 stmt: SWITCH LP expr RP . LC casestmt RC

    LC  shift, and go to state 88


State 74

   42 factor: LP expr RP .

    $default  reduce using rule 42 (factor)


State 75

   26 ifstmt: IF LP expr RP LC . stmt_list RC elsestmt

    IF      shift, and go to state 8
    ID      shift, and go to state 9
    WHILE   shift, and go to state 10
    FOR     shift, and go to state 11
    INT     shift, and go to state 12
    DOUBLE  shift, and go to state 13
    LONG    shift, and go to state 14
    SHORT   shift, and go to state 15
    FLOAT   shift, and go to state 16
    CHAR    shift, and go to state 17
    SWITCH  shift, and go to state 18

    stmt_list    go to state 89
    stmt         go to state 20
    assignment   go to state 21
    declaration  go to state 22
    ifstmt       go to state 23


State 76

   34 expr: expr EQQ expr2 .
   36 expr2: expr2 . PLUS term
   37      | expr2 . MINUS term

    MINUS  shift, and go to state 66
    PLUS   shift, and go to state 67

    $default  reduce using rule 34 (expr)


State 77

   33 expr: expr GE expr2 .
   36 expr2: expr2 . PLUS term
   37      | expr2 . MINUS term

    MINUS  shift, and go to state 66
    PLUS   shift, and go to state 67

    $default  reduce using rule 33 (expr)


State 78

   31 expr: expr GT expr2 .
   36 expr2: expr2 . PLUS term
   37      | expr2 . MINUS term

    MINUS  shift, and go to state 66
    PLUS   shift, and go to state 67

    $default  reduce using rule 31 (expr)


State 79

   32 expr: expr LE expr2 .
   36 expr2: expr2 . PLUS term
   37      | expr2 . MINUS term

    MINUS  shift, and go to state 66
    PLUS   shift, and go to state 67

    $default  reduce using rule 32 (expr)


State 80

   30 expr: expr LT expr2 .
   36 expr2: expr2 . PLUS term
   37      | expr2 . MINUS term

    MINUS  shift, and go to state 66
    PLUS   shift, and go to state 67

    $default  reduce using rule 30 (expr)


State 81

   37 expr2: expr2 MINUS term .
   39 term: term . TIMES factor
   40     | term . DIV factor

    DIV    shift, and go to state 68
    TIMES  shift, and go to state 69

    $default  reduce using rule 37 (expr2)


State 82

   36 expr2: expr2 PLUS term .
   39 term: term . TIMES factor
   40     | term . DIV factor

    DIV    shift, and go to state 68
    TIMES  shift, and go to state 69

    $default  reduce using rule 36 (expr2)


State 83

   40 term: term DIV factor .

    $default  reduce using rule 40 (term)


State 84

   39 term: term TIMES factor .

    $default  reduce using rule 39 (term)


State 85

    6 stmt: WHILE LP expr RP LC . stmt_list RC

    IF      shift, and go to state 8
    ID      shift, and go to state 9
    WHILE   shift, and go to state 10
    FOR     shift, and go to state 11
    INT     shift, and go to state 12
    DOUBLE  shift, and go to state 13
    LONG    shift, and go to state 14
    SHORT   shift, and go to state 15
    FLOAT   shift, and go to state 16
    CHAR    shift, and go to state 17
    SWITCH  shift, and go to state 18

    stmt_list    go to state 90
    stmt         go to state 20
    assignment   go to state 21
    declaration  go to state 22
    ifstmt       go to state 23


State 86

    8 stmt: FOR LP forcondition1 SEMI forcond2 . SEMI forcondition1 RP LC stmt_list RC

    SEMI  shift, and go to state 91


State 87

   15 forcond2: expr .
   30 expr: expr . LT expr2
   31     | expr . GT expr2
   32     | expr . LE expr2
   33     | expr . GE expr2
   34     | expr . EQQ expr2

    EQQ  shift, and go to state 61
    GE   shift, and go to state 62
    GT   shift, and go to state 63
    LE   shift, and go to state 64
    LT   shift, and go to state 65

    $default  reduce using rule 15 (forcond2)


State 88

    9 stmt: SWITCH LP expr RP LC . casestmt RC

    CASE      shift, and go to state 92
    TDEFAULT  shift, and go to state 93

    $default  reduce using rule 12 (casestmt)

    casestmt  go to state 94


State 89

    2 stmt_list: stmt_list . stmt
   26 ifstmt: IF LP expr RP LC stmt_list . RC elsestmt

    IF      shift, and go to state 8
    ID      shift, and go to state 9
    WHILE   shift, and go to state 10
    FOR     shift, and go to state 11
    INT     shift, and go to state 12
    RC      shift, and go to state 95
    DOUBLE  shift, and go to state 13
    LONG    shift, and go to state 14
    SHORT   shift, and go to state 15
    FLOAT   shift, and go to state 16
    CHAR    shift, and go to state 17
    SWITCH  shift, and go to state 18

    stmt         go to state 36
    assignment   go to state 21
    declaration  go to state 22
    ifstmt       go to state 23


State 90

    2 stmt_list: stmt_list . stmt
    6 stmt: WHILE LP expr RP LC stmt_list . RC

    IF      shift, and go to state 8
    ID      shift, and go to state 9
    WHILE   shift, and go to state 10
    FOR     shift, and go to state 11
    INT     shift, and go to state 12
    RC      shift, and go to state 96
    DOUBLE  shift, and go to state 13
    LONG    shift, and go to state 14
    SHORT   shift, and go to state 15
    FLOAT   shift, and go to state 16
    CHAR    shift, and go to state 17
    SWITCH  shift, and go to state 18

    stmt         go to state 36
    assignment   go to state 21
    declaration  go to state 22
    ifstmt       go to state 23


State 91

    8 stmt: FOR LP forcondition1 SEMI forcond2 SEMI . forcondition1 RP LC stmt_list RC

    ID  shift, and go to state 9

    $default  reduce using rule 14 (forcondition1)

    forcondition1  go to state 97
    assignment     go to state 49


State 92

   10 casestmt: CASE . expr COLON stmt_list BREAK SEMI casestmt

    LP   shift, and go to state 39
    NUM  shift, and go to state 40
    ID   shift, and go to state 41

    expr    go to state 98
    expr2   go to state 43
    term    go to state 44
    factor  go to state 45


State 93

   11 casestmt: TDEFAULT . COLON stmt_list

    COLON  shift, and go to state 99


State 94

    9 stmt: SWITCH LP expr RP LC casestmt . RC

    RC  shift, and go to state 100


State 95

   26 ifstmt: IF LP expr RP LC stmt_list RC . elsestmt

    ELSE  shift, and go to state 101

    $default  reduce using rule 29 (elsestmt)

    elsestmt  go to state 102


State 96

    6 stmt: WHILE LP expr RP LC stmt_list RC .

    $default  reduce using rule 6 (stmt)


State 97

    8 stmt: FOR LP forcondition1 SEMI forcond2 SEMI forcondition1 . RP LC stmt_list RC

    RP  shift, and go to state 103


State 98

   10 casestmt: CASE expr . COLON stmt_list BREAK SEMI casestmt
   30 expr: expr . LT expr2
   31     | expr . GT expr2
   32     | expr . LE expr2
   33     | expr . GE expr2
   34     | expr . EQQ expr2

    COLON  shift, and go to state 104
    EQQ    shift, and go to state 61
    GE     shift, and go to state 62
    GT     shift, and go to state 63
    LE     shift, and go to state 64
    LT     shift, and go to state 65


State 99

   11 casestmt: TDEFAULT COLON . stmt_list

    IF      shift, and go to state 8
    ID      shift, and go to state 9
    WHILE   shift, and go to state 10
    FOR     shift, and go to state 11
    INT     shift, and go to state 12
    DOUBLE  shift, and go to state 13
    LONG    shift, and go to state 14
    SHORT   shift, and go to state 15
    FLOAT   shift, and go to state 16
    CHAR    shift, and go to state 17
    SWITCH  shift, and go to state 18

    stmt_list    go to state 105
    stmt         go to state 20
    assignment   go to state 21
    declaration  go to state 22
    ifstmt       go to state 23


State 100

    9 stmt: SWITCH LP expr RP LC casestmt RC .

    $default  reduce using rule 9 (stmt)


State 101

   27 elsestmt: ELSE . LC stmt_list RC
   28         | ELSE . ifstmt

    IF  shift, and go to state 8
    LC  shift, and go to state 106

    ifstmt  go to state 107


State 102

   26 ifstmt: IF LP expr RP LC stmt_list RC elsestmt .

    $default  reduce using rule 26 (ifstmt)


State 103

    8 stmt: FOR LP forcondition1 SEMI forcond2 SEMI forcondition1 RP . LC stmt_list RC

    LC  shift, and go to state 108


State 104

   10 casestmt: CASE expr COLON . stmt_list BREAK SEMI casestmt

    IF      shift, and go to state 8
    ID      shift, and go to state 9
    WHILE   shift, and go to state 10
    FOR     shift, and go to state 11
    INT     shift, and go to state 12
    DOUBLE  shift, and go to state 13
    LONG    shift, and go to state 14
    SHORT   shift, and go to state 15
    FLOAT   shift, and go to state 16
    CHAR    shift, and go to state 17
    SWITCH  shift, and go to state 18

    stmt_list    go to state 109
    stmt         go to state 20
    assignment   go to state 21
    declaration  go to state 22
    ifstmt       go to state 23


State 105

    2 stmt_list: stmt_list . stmt
   11 casestmt: TDEFAULT COLON stmt_list .

    IF      shift, and go to state 8
    ID      shift, and go to state 9
    WHILE   shift, and go to state 10
    FOR     shift, and go to state 11
    INT     shift, and go to state 12
    DOUBLE  shift, and go to state 13
    LONG    shift, and go to state 14
    SHORT   shift, and go to state 15
    FLOAT   shift, and go to state 16
    CHAR    shift, and go to state 17
    SWITCH  shift, and go to state 18

    $default  reduce using rule 11 (casestmt)

    stmt         go to state 36
    assignment   go to state 21
    declaration  go to state 22
    ifstmt       go to state 23


State 106

   27 elsestmt: ELSE LC . stmt_list RC

    IF      shift, and go to state 8
    ID      shift, and go to state 9
    WHILE   shift, and go to state 10
    FOR     shift, and go to state 11
    INT     shift, and go to state 12
    DOUBLE  shift, and go to state 13
    LONG    shift, and go to state 14
    SHORT   shift, and go to state 15
    FLOAT   shift, and go to state 16
    CHAR    shift, and go to state 17
    SWITCH  shift, and go to state 18

    stmt_list    go to state 110
    stmt         go to state 20
    assignment   go to state 21
    declaration  go to state 22
    ifstmt       go to state 23


State 107

   28 elsestmt: ELSE ifstmt .

    $default  reduce using rule 28 (elsestmt)


State 108

    8 stmt: FOR LP forcondition1 SEMI forcond2 SEMI forcondition1 RP LC . stmt_list RC

    IF      shift, and go to state 8
    ID      shift, and go to state 9
    WHILE   shift, and go to state 10
    FOR     shift, and go to state 11
    INT     shift, and go to state 12
    DOUBLE  shift, and go to state 13
    LONG    shift, and go to state 14
    SHORT   shift, and go to state 15
    FLOAT   shift, and go to state 16
    CHAR    shift, and go to state 17
    SWITCH  shift, and go to state 18

    stmt_list    go to state 111
    stmt         go to state 20
    assignment   go to state 21
    declaration  go to state 22
    ifstmt       go to state 23


State 109

    2 stmt_list: stmt_list . stmt
   10 casestmt: CASE expr COLON stmt_list . BREAK SEMI casestmt

    IF      shift, and go to state 8
    ID      shift, and go to state 9
    WHILE   shift, and go to state 10
    FOR     shift, and go to state 11
    BREAK   shift, and go to state 112
    INT     shift, and go to state 12
    DOUBLE  shift, and go to state 13
    LONG    shift, and go to state 14
    SHORT   shift, and go to state 15
    FLOAT   shift, and go to state 16
    CHAR    shift, and go to state 17
    SWITCH  shift, and go to state 18

    stmt         go to state 36
    assignment   go to state 21
    declaration  go to state 22
    ifstmt       go to state 23


State 110

    2 stmt_list: stmt_list . stmt
   27 elsestmt: ELSE LC stmt_list . RC

    IF      shift, and go to state 8
    ID      shift, and go to state 9
    WHILE   shift, and go to state 10
    FOR     shift, and go to state 11
    INT     shift, and go to state 12
    RC      shift, and go to state 113
    DOUBLE  shift, and go to state 13
    LONG    shift, and go to state 14
    SHORT   shift, and go to state 15
    FLOAT   shift, and go to state 16
    CHAR    shift, and go to state 17
    SWITCH  shift, and go to state 18

    stmt         go to state 36
    assignment   go to state 21
    declaration  go to state 22
    ifstmt       go to state 23


State 111

    2 stmt_list: stmt_list . stmt
    8 stmt: FOR LP forcondition1 SEMI forcond2 SEMI forcondition1 RP LC stmt_list . RC

    IF      shift, and go to state 8
    ID      shift, and go to state 9
    WHILE   shift, and go to state 10
    FOR     shift, and go to state 11
    INT     shift, and go to state 12
    RC      shift, and go to state 114
    DOUBLE  shift, and go to state 13
    LONG    shift, and go to state 14
    SHORT   shift, and go to state 15
    FLOAT   shift, and go to state 16
    CHAR    shift, and go to state 17
    SWITCH  shift, and go to state 18

    stmt         go to state 36
    assignment   go to state 21
    declaration  go to state 22
    ifstmt       go to state 23


State 112

   10 casestmt: CASE expr COLON stmt_list BREAK . SEMI casestmt

    SEMI  shift, and go to state 115


State 113

   27 elsestmt: ELSE LC stmt_list RC .

    $default  reduce using rule 27 (elsestmt)


State 114

    8 stmt: FOR LP forcondition1 SEMI forcond2 SEMI forcondition1 RP LC stmt_list RC .

    $default  reduce using rule 8 (stmt)


State 115

   10 casestmt: CASE expr COLON stmt_list BREAK SEMI . casestmt

    CASE      shift, and go to state 92
    TDEFAULT  shift, and go to state 93

    $default  reduce using rule 12 (casestmt)

    casestmt  go to state 116


State 116

   10 casestmt: CASE expr COLON stmt_list BREAK SEMI casestmt .

    $default  reduce using rule 10 (casestmt)
